<?php

require dirname(__FILE__) . '/BigInteger.php';

class MusicAPI
{
    const MODULUS = '00e0b509f6259df8642dbc35662901477df22677ec152b5ff68ace615bb7b725152b3ab17a876aea8a5aa76d2e417629ec4ee341f56135fccf695280104e0312ecbda92557c93870114af6c9d05c4f7f0c3685b7a46bee255932575cce10b424d813cfe4875d3e82047b97ddef52741d546b8e289dc6935b3ece0462db0a22b8e7';
    const NONCE = '0CoJUm6Qyw8W8jud';
    const PUBKEY = '010001';
    protected $headers = array(
		"content-type: application/x-www-form-urlencoded",
		"referer: https://music.163.com/search/",
		"user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36 Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.80 Safari/537.36 Core/1.47.277.400 QQBrowser/9.4.7658.400"
  	);
    protected $secretKey;

    public function __construct()
    {
        $this->secretKey = $this->createSecretKey(16);
    }

    protected function createSecretKey($length)
    {
        $str = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
        $r = '';
        for ($i = 0; $i < $length; $i++) {
            $r .= $str[rand(0, strlen($str) - 1)];
        }
        return $r;
    }
    protected function aesEncrypt($secretData, $secret)
    {
        return openssl_encrypt($secretData, 'aes-128-cbc', $secret, false, '0102030405060708');
    }

    /**
     * @param $text
     * @return string
     */
    protected function rsaEncrypt($text)
    {
        $rtext = strrev(utf8_encode($text));
        $keytext = $this->bchexdec($this->strToHex($rtext));
        $biText = new Math_BigInteger($keytext);
        $biKey = new Math_BigInteger($this->bchexdec(self::PUBKEY));
        $biMod = new Math_BigInteger($this->bchexdec(self::MODULUS));
        $key = $biText->modPow($biKey, $biMod)->toHex();
        return str_pad($key, 256, '0', STR_PAD_LEFT);
    }

    protected function bchexdec($hex)
    {
        $dec = 0;
        $len = strlen($hex);
        for ($i = 0; $i < $len; $i++) {
            $dec = bcadd($dec, bcmul(strval(hexdec($hex[$i])), bcpow('16', strval($len - $i - 1))));
        }
        return $dec;
    }

    protected function strToHex($str)
    {
        $hex = '';
        for ($i = 0; $i < strlen($str); $i++) {
            $hex .= dechex(ord($str[$i]));
        }
        return $hex;
    }
	
    protected function prepare($data)
    {
        $data['params'] = $this->aesEncrypt($data['params'], self::NONCE);
        $data['params'] = $this->aesEncrypt($data['params'], $this->secretKey);
        $data['encSecKey'] = $this->rsaEncrypt($this->secretKey);
        return $data;
		
    }

    protected function curl($url, $data = null)
    {	
        $curl = curl_init();
        curl_setopt($curl, CURLOPT_URL, $url);
        if ($data) {
            if (is_array($data)) $data = http_build_query($data);
            curl_setopt($curl, CURLOPT_POSTFIELDS, $data);
            curl_setopt($curl, CURLOPT_POST, 1);
        }
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl, CURLOPT_CONNECTTIMEOUT, 10);
        curl_setopt($curl, CURLOPT_HTTPHEADER, $this->headers);
        $result = curl_exec($curl);
        curl_close($curl);
        return $result;
    }

    /**
     * 搜索API url https://music.163.com/weapi/cloudsearch/get/web?csrf_token=
     * @param $s 要搜索的内容
     * @param $limit 要返回的条数
     * @param $offset 设置偏移量 用于分页
     * @param $type 类型 [1 单曲] [10 专辑] [100 歌手] [1000 歌单] [1002 用户]
     * @return JSON
     */

    $limit = 30, $offset = 0, $type = 1;
	$url = 'https://music.163.com/weapi/cloudsearch/get/web?csrf_token=';
    $data = ['params' => '{
        "s":"' . $_GET['s'] . '",
        "type":"' . $type . '",
        "limit":"' . $limit . '",
        "total":"true",
        "offset":"' . $offset . '",
        "csrf_token": ""
    }'];
	print_r($this->curl($url, $this->prepare($data));) 
}